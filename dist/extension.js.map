{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://JavaSelectedCodeExecutor/./node_modules/iconv-lite/encodings/dbcs-codec.js","webpack://JavaSelectedCodeExecutor/./node_modules/iconv-lite/encodings/dbcs-data.js","webpack://JavaSelectedCodeExecutor/./node_modules/iconv-lite/encodings/index.js","webpack://JavaSelectedCodeExecutor/./node_modules/iconv-lite/encodings/internal.js","webpack://JavaSelectedCodeExecutor/./node_modules/iconv-lite/encodings/sbcs-codec.js","webpack://JavaSelectedCodeExecutor/./node_modules/iconv-lite/encodings/sbcs-data-generated.js","webpack://JavaSelectedCodeExecutor/./node_modules/iconv-lite/encodings/sbcs-data.js","webpack://JavaSelectedCodeExecutor/./node_modules/iconv-lite/encodings/utf16.js","webpack://JavaSelectedCodeExecutor/./node_modules/iconv-lite/encodings/utf32.js","webpack://JavaSelectedCodeExecutor/./node_modules/iconv-lite/encodings/utf7.js","webpack://JavaSelectedCodeExecutor/./node_modules/iconv-lite/lib/bom-handling.js","webpack://JavaSelectedCodeExecutor/./node_modules/iconv-lite/lib/index.js","webpack://JavaSelectedCodeExecutor/./node_modules/iconv-lite/lib/streams.js","webpack://JavaSelectedCodeExecutor/./node_modules/safer-buffer/safer.js","webpack://JavaSelectedCodeExecutor/external commonjs \"vscode\"","webpack://JavaSelectedCodeExecutor/external node-commonjs \"buffer\"","webpack://JavaSelectedCodeExecutor/external node-commonjs \"fs\"","webpack://JavaSelectedCodeExecutor/external node-commonjs \"os\"","webpack://JavaSelectedCodeExecutor/external node-commonjs \"path\"","webpack://JavaSelectedCodeExecutor/external node-commonjs \"stream\"","webpack://JavaSelectedCodeExecutor/external node-commonjs \"string_decoder\"","webpack://JavaSelectedCodeExecutor/webpack/bootstrap","webpack://JavaSelectedCodeExecutor/./src/extension.ts"],"sourcesContent":["\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 common decode nodes.\n        var commonThirdByteNodeIdx = this.decodeTables.length;\n        this.decodeTables.push(UNASSIGNED_NODE.slice(0));\n\n        var commonFourthByteNodeIdx = this.decodeTables.length;\n        this.decodeTables.push(UNASSIGNED_NODE.slice(0));\n\n        // Fill out the tree\n        var firstByteNode = this.decodeTables[0];\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNode = this.decodeTables[NODE_START - firstByteNode[i]];\n            for (var j = 0x30; j <= 0x39; j++) {\n                if (secondByteNode[j] === UNASSIGNED) {\n                    secondByteNode[j] = NODE_START - commonThirdByteNodeIdx;\n                } else if (secondByteNode[j] > NODE_START) {\n                    throw new Error(\"gb18030 decode tables conflict at byte 2\");\n                }\n\n                var thirdByteNode = this.decodeTables[NODE_START - secondByteNode[j]];\n                for (var k = 0x81; k <= 0xFE; k++) {\n                    if (thirdByteNode[k] === UNASSIGNED) {\n                        thirdByteNode[k] = NODE_START - commonFourthByteNodeIdx;\n                    } else if (thirdByteNode[k] === NODE_START - commonFourthByteNodeIdx) {\n                        continue;\n                    } else if (thirdByteNode[k] > NODE_START) {\n                        throw new Error(\"gb18030 decode tables conflict at byte 3\");\n                    }\n\n                    var fourthByteNode = this.decodeTables[NODE_START - thirdByteNode[k]];\n                    for (var l = 0x30; l <= 0x39; l++) {\n                        if (fourthByteNode[l] === UNASSIGNED)\n                            fourthByteNode[l] = GB18030_CODE;\n                    }\n                }\n            }\n        }\n    }\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    var hasValues = false;\n    var subNodeEmpty = {};\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0) {\n            this._setEncodeChar(uCode, mbCode);\n            hasValues = true;\n        } else if (uCode <= NODE_START) {\n            var subNodeIdx = NODE_START - uCode;\n            if (!subNodeEmpty[subNodeIdx]) {  // Skip empty subtrees (they are too large in gb18030).\n                var newPrefix = (mbCode << 8) >>> 0;  // NOTE: '>>> 0' keeps 32-bit num positive.\n                if (this._fillEncodeTable(subNodeIdx, newPrefix, skipEncodeChars))\n                    hasValues = true;\n                else\n                    subNodeEmpty[subNodeIdx] = true;\n            }\n        } else if (uCode <= SEQ_START) {\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n            hasValues = true;\n        }\n    }\n    return hasValues;\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else if (dbcsCode < 0x1000000) {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        } else {\n            newBuf[j++] = dbcsCode >>> 24;\n            newBuf[j++] = (dbcsCode >>> 16) & 0xFF;\n            newBuf[j++] = (dbcsCode >>> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBytes = [];\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBytes = this.prevBytes, prevOffset = this.prevBytes.length,\n        seqStart = -this.prevBytes.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBytes[i + prevOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n            i = seqStart; // Skip one byte ('i' will be incremented by the for loop) and try to parse again.\n        }\n        else if (uCode === GB18030_CODE) {\n            if (i >= 3) {\n                var ptr = (buf[i-3]-0x81)*12600 + (buf[i-2]-0x30)*1260 + (buf[i-1]-0x81)*10 + (curByte-0x30);\n            } else {\n                var ptr = (prevBytes[i-3+prevOffset]-0x81)*12600 + \n                          (((i-2 >= 0) ? buf[i-2] : prevBytes[i-2+prevOffset])-0x30)*1260 + \n                          (((i-1 >= 0) ? buf[i-1] : prevBytes[i-1+prevOffset])-0x81)*10 + \n                          (curByte-0x30);\n            }\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode >= 0x10000) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 | (uCode >> 10);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 | (uCode & 0x3FF);\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBytes = (seqStart >= 0)\n        ? Array.prototype.slice.call(buf, seqStart)\n        : prevBytes.slice(seqStart + prevOffset).concat(Array.prototype.slice.call(buf));\n\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBytes.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var bytesArr = this.prevBytes.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBytes = [];\n        this.nodeIdx = 0;\n        if (bytesArr.length > 0)\n            ret += this.write(bytesArr);\n    }\n\n    this.prevBytes = [];\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + ((r-l+1) >> 1);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [\n            // Although Encoding Standard says we should avoid encoding to HKSCS area (See Step 1 of\n            // https://encoding.spec.whatwg.org/#index-big5-pointer), we still do it to increase compatibility with ICU.\n            // But if a single unicode point can be encoded both as HKSCS and regular Big5, we prefer the latter.\n            0x8e69, 0x8e6f, 0x8e7e, 0x8eab, 0x8eb4, 0x8ecd, 0x8ed0, 0x8f57, 0x8f69, 0x8f6e, 0x8fcb, 0x8ffe,\n            0x906d, 0x907a, 0x90c4, 0x90dc, 0x90f1, 0x91bf, 0x92af, 0x92b0, 0x92b1, 0x92b2, 0x92d1, 0x9447, 0x94ca,\n            0x95d9, 0x96fc, 0x9975, 0x9b76, 0x9b78, 0x9b7b, 0x9bc6, 0x9bde, 0x9bec, 0x9bf6, 0x9c42, 0x9c53, 0x9c62,\n            0x9c68, 0x9c6b, 0x9c77, 0x9cbc, 0x9cbd, 0x9cd0, 0x9d57, 0x9d5a, 0x9dc4, 0x9def, 0x9dfb, 0x9ea9, 0x9eef,\n            0x9efd, 0x9f60, 0x9fcb, 0xa077, 0xa0dc, 0xa0df, 0x8fcc, 0x92c8, 0x9644, 0x96ed,\n\n            // Step 2 of https://encoding.spec.whatwg.org/#index-big5-pointer: Use last pointer for U+2550, U+255E, U+2561, U+256A, U+5341, or U+5345\n            0xa2a4, 0xa2a5, 0xa2a7, 0xa2a6, 0xa2cc, 0xa2ce,\n        ],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf32\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it.\nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    this.decoder = new StringDecoder(codec.enc);\n}\n\nInternalDecoder.prototype.write = function(buf) {\n    if (!Buffer.isBuffer(buf)) {\n        buf = Buffer.from(buf);\n    }\n\n    return this.decoder.write(buf);\n}\n\nInternalDecoder.prototype.end = function() {\n    return this.decoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n    },\n\n    \"cp720\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\\x80\\x81éâ\\x84à\\x86çêëèïî\\x8d\\x8e\\x8f\\x90\\u0651\\u0652ô¤ـûùءآأؤ£إئابةتثجحخدذرزسشص«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ضطظعغفµقكلمنهوىي≡\\u064b\\u064c\\u064d\\u064e\\u064f\\u0650≈°∙·√ⁿ²■\\u00a0\"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n    this.overflowByte = -1;\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBufs = [];\n    this.initialBufsLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBufs.push(buf);\n        this.initialBufsLen += buf.length;\n        \n        if (this.initialBufsLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        var trail = this.decoder.end();\n        if (trail)\n            resStr += trail;\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(bufs, defaultEncoding) {\n    var b = [];\n    var charsProcessed = 0;\n    var asciiCharsLE = 0, asciiCharsBE = 0; // Number of ASCII chars when decoded as LE or BE.\n\n    outer_loop:\n    for (var i = 0; i < bufs.length; i++) {\n        var buf = bufs[i];\n        for (var j = 0; j < buf.length; j++) {\n            b.push(buf[j]);\n            if (b.length === 2) {\n                if (charsProcessed === 0) {\n                    // Check BOM first.\n                    if (b[0] === 0xFF && b[1] === 0xFE) return 'utf-16le';\n                    if (b[0] === 0xFE && b[1] === 0xFF) return 'utf-16be';\n                }\n\n                if (b[0] === 0 && b[1] !== 0) asciiCharsBE++;\n                if (b[0] !== 0 && b[1] === 0) asciiCharsLE++;\n\n                b.length = 0;\n                charsProcessed++;\n\n                if (charsProcessed >= 100) {\n                    break outer_loop;\n                }\n            }\n        }\n    }\n\n    // Make decisions.\n    // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n    // So, we count ASCII as if it was LE or BE, and decide from that.\n    if (asciiCharsBE > asciiCharsLE) return 'utf-16be';\n    if (asciiCharsBE < asciiCharsLE) return 'utf-16le';\n\n    // Couldn't decide (likely all zeros or not enough data).\n    return defaultEncoding || 'utf-16le';\n}\n\n\n","'use strict';\n\nvar Buffer = require('safer-buffer').Buffer;\n\n// == UTF32-LE/BE codec. ==========================================================\n\nexports._utf32 = Utf32Codec;\n\nfunction Utf32Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n    this.bomAware = true;\n    this.isLE = codecOptions.isLE;\n}\n\nexports.utf32le = { type: '_utf32', isLE: true };\nexports.utf32be = { type: '_utf32', isLE: false };\n\n// Aliases\nexports.ucs4le = 'utf32le';\nexports.ucs4be = 'utf32be';\n\nUtf32Codec.prototype.encoder = Utf32Encoder;\nUtf32Codec.prototype.decoder = Utf32Decoder;\n\n// -- Encoding\n\nfunction Utf32Encoder(options, codec) {\n    this.isLE = codec.isLE;\n    this.highSurrogate = 0;\n}\n\nUtf32Encoder.prototype.write = function(str) {\n    var src = Buffer.from(str, 'ucs2');\n    var dst = Buffer.alloc(src.length * 2);\n    var write32 = this.isLE ? dst.writeUInt32LE : dst.writeUInt32BE;\n    var offset = 0;\n\n    for (var i = 0; i < src.length; i += 2) {\n        var code = src.readUInt16LE(i);\n        var isHighSurrogate = (0xD800 <= code && code < 0xDC00);\n        var isLowSurrogate = (0xDC00 <= code && code < 0xE000);\n\n        if (this.highSurrogate) {\n            if (isHighSurrogate || !isLowSurrogate) {\n                // There shouldn't be two high surrogates in a row, nor a high surrogate which isn't followed by a low\n                // surrogate. If this happens, keep the pending high surrogate as a stand-alone semi-invalid character\n                // (technically wrong, but expected by some applications, like Windows file names).\n                write32.call(dst, this.highSurrogate, offset);\n                offset += 4;\n            }\n            else {\n                // Create 32-bit value from high and low surrogates;\n                var codepoint = (((this.highSurrogate - 0xD800) << 10) | (code - 0xDC00)) + 0x10000;\n\n                write32.call(dst, codepoint, offset);\n                offset += 4;\n                this.highSurrogate = 0;\n\n                continue;\n            }\n        }\n\n        if (isHighSurrogate)\n            this.highSurrogate = code;\n        else {\n            // Even if the current character is a low surrogate, with no previous high surrogate, we'll\n            // encode it as a semi-invalid stand-alone character for the same reasons expressed above for\n            // unpaired high surrogates.\n            write32.call(dst, code, offset);\n            offset += 4;\n            this.highSurrogate = 0;\n        }\n    }\n\n    if (offset < dst.length)\n        dst = dst.slice(0, offset);\n\n    return dst;\n};\n\nUtf32Encoder.prototype.end = function() {\n    // Treat any leftover high surrogate as a semi-valid independent character.\n    if (!this.highSurrogate)\n        return;\n\n    var buf = Buffer.alloc(4);\n\n    if (this.isLE)\n        buf.writeUInt32LE(this.highSurrogate, 0);\n    else\n        buf.writeUInt32BE(this.highSurrogate, 0);\n\n    this.highSurrogate = 0;\n\n    return buf;\n};\n\n// -- Decoding\n\nfunction Utf32Decoder(options, codec) {\n    this.isLE = codec.isLE;\n    this.badChar = codec.iconv.defaultCharUnicode.charCodeAt(0);\n    this.overflow = [];\n}\n\nUtf32Decoder.prototype.write = function(src) {\n    if (src.length === 0)\n        return '';\n\n    var i = 0;\n    var codepoint = 0;\n    var dst = Buffer.alloc(src.length + 4);\n    var offset = 0;\n    var isLE = this.isLE;\n    var overflow = this.overflow;\n    var badChar = this.badChar;\n\n    if (overflow.length > 0) {\n        for (; i < src.length && overflow.length < 4; i++)\n            overflow.push(src[i]);\n        \n        if (overflow.length === 4) {\n            // NOTE: codepoint is a signed int32 and can be negative.\n            // NOTE: We copied this block from below to help V8 optimize it (it works with array, not buffer).\n            if (isLE) {\n                codepoint = overflow[i] | (overflow[i+1] << 8) | (overflow[i+2] << 16) | (overflow[i+3] << 24);\n            } else {\n                codepoint = overflow[i+3] | (overflow[i+2] << 8) | (overflow[i+1] << 16) | (overflow[i] << 24);\n            }\n            overflow.length = 0;\n\n            offset = _writeCodepoint(dst, offset, codepoint, badChar);\n        }\n    }\n\n    // Main loop. Should be as optimized as possible.\n    for (; i < src.length - 3; i += 4) {\n        // NOTE: codepoint is a signed int32 and can be negative.\n        if (isLE) {\n            codepoint = src[i] | (src[i+1] << 8) | (src[i+2] << 16) | (src[i+3] << 24);\n        } else {\n            codepoint = src[i+3] | (src[i+2] << 8) | (src[i+1] << 16) | (src[i] << 24);\n        }\n        offset = _writeCodepoint(dst, offset, codepoint, badChar);\n    }\n\n    // Keep overflowing bytes.\n    for (; i < src.length; i++) {\n        overflow.push(src[i]);\n    }\n\n    return dst.slice(0, offset).toString('ucs2');\n};\n\nfunction _writeCodepoint(dst, offset, codepoint, badChar) {\n    // NOTE: codepoint is signed int32 and can be negative. We keep it that way to help V8 with optimizations.\n    if (codepoint < 0 || codepoint > 0x10FFFF) {\n        // Not a valid Unicode codepoint\n        codepoint = badChar;\n    } \n\n    // Ephemeral Planes: Write high surrogate.\n    if (codepoint >= 0x10000) {\n        codepoint -= 0x10000;\n\n        var high = 0xD800 | (codepoint >> 10);\n        dst[offset++] = high & 0xff;\n        dst[offset++] = high >> 8;\n\n        // Low surrogate is written below.\n        var codepoint = 0xDC00 | (codepoint & 0x3FF);\n    }\n\n    // Write BMP char or low surrogate.\n    dst[offset++] = codepoint & 0xff;\n    dst[offset++] = codepoint >> 8;\n\n    return offset;\n};\n\nUtf32Decoder.prototype.end = function() {\n    this.overflow.length = 0;\n};\n\n// == UTF-32 Auto codec =============================================================\n// Decoder chooses automatically from UTF-32LE and UTF-32BE using BOM and space-based heuristic.\n// Defaults to UTF-32LE. http://en.wikipedia.org/wiki/UTF-32\n// Encoder/decoder default can be changed: iconv.decode(buf, 'utf32', {defaultEncoding: 'utf-32be'});\n\n// Encoder prepends BOM (which can be overridden with (addBOM: false}).\n\nexports.utf32 = Utf32AutoCodec;\nexports.ucs4 = 'utf32';\n\nfunction Utf32AutoCodec(options, iconv) {\n    this.iconv = iconv;\n}\n\nUtf32AutoCodec.prototype.encoder = Utf32AutoEncoder;\nUtf32AutoCodec.prototype.decoder = Utf32AutoDecoder;\n\n// -- Encoding\n\nfunction Utf32AutoEncoder(options, codec) {\n    options = options || {};\n\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n\n    this.encoder = codec.iconv.getEncoder(options.defaultEncoding || 'utf-32le', options);\n}\n\nUtf32AutoEncoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n};\n\nUtf32AutoEncoder.prototype.end = function() {\n    return this.encoder.end();\n};\n\n// -- Decoding\n\nfunction Utf32AutoDecoder(options, codec) {\n    this.decoder = null;\n    this.initialBufs = [];\n    this.initialBufsLen = 0;\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf32AutoDecoder.prototype.write = function(buf) {\n    if (!this.decoder) { \n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBufs.push(buf);\n        this.initialBufsLen += buf.length;\n\n        if (this.initialBufsLen < 32) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.write(buf);\n};\n\nUtf32AutoDecoder.prototype.end = function() {\n    if (!this.decoder) {\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        var trail = this.decoder.end();\n        if (trail)\n            resStr += trail;\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.end();\n};\n\nfunction detectEncoding(bufs, defaultEncoding) {\n    var b = [];\n    var charsProcessed = 0;\n    var invalidLE = 0, invalidBE = 0;   // Number of invalid chars when decoded as LE or BE.\n    var bmpCharsLE = 0, bmpCharsBE = 0; // Number of BMP chars when decoded as LE or BE.\n\n    outer_loop:\n    for (var i = 0; i < bufs.length; i++) {\n        var buf = bufs[i];\n        for (var j = 0; j < buf.length; j++) {\n            b.push(buf[j]);\n            if (b.length === 4) {\n                if (charsProcessed === 0) {\n                    // Check BOM first.\n                    if (b[0] === 0xFF && b[1] === 0xFE && b[2] === 0 && b[3] === 0) {\n                        return 'utf-32le';\n                    }\n                    if (b[0] === 0 && b[1] === 0 && b[2] === 0xFE && b[3] === 0xFF) {\n                        return 'utf-32be';\n                    }\n                }\n\n                if (b[0] !== 0 || b[1] > 0x10) invalidBE++;\n                if (b[3] !== 0 || b[2] > 0x10) invalidLE++;\n\n                if (b[0] === 0 && b[1] === 0 && (b[2] !== 0 || b[3] !== 0)) bmpCharsBE++;\n                if ((b[0] !== 0 || b[1] !== 0) && b[2] === 0 && b[3] === 0) bmpCharsLE++;\n\n                b.length = 0;\n                charsProcessed++;\n\n                if (charsProcessed >= 100) {\n                    break outer_loop;\n                }\n            }\n        }\n    }\n\n    // Make decisions.\n    if (bmpCharsBE - invalidBE > bmpCharsLE - invalidLE)  return 'utf-32be';\n    if (bmpCharsBE - invalidBE < bmpCharsLE - invalidLE)  return 'utf-32le';\n\n    // Couldn't decide (likely all zeros or not enough data).\n    return defaultEncoding || 'utf-32le';\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), \"ascii\");\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), \"ascii\");\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), \"ascii\").replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), \"ascii\").replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n// Streaming API\n// NOTE: Streaming API naturally depends on 'stream' module from Node.js. Unfortunately in browser environments this module can add\n// up to 100Kb to the output bundle. To avoid unnecessary code bloat, we don't enable Streaming API in browser by default.\n// If you would like to enable it explicitly, please add the following code to your app:\n// > iconv.enableStreamingAPI(require('stream'));\niconv.enableStreamingAPI = function enableStreamingAPI(stream_module) {\n    if (iconv.supportsStreams)\n        return;\n\n    // Dependency-inject stream module to create IconvLite stream classes.\n    var streams = require(\"./streams\")(stream_module);\n\n    // Not public API yet, but expose the stream classes.\n    iconv.IconvLiteEncoderStream = streams.IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = streams.IconvLiteDecoderStream;\n\n    // Streaming API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new iconv.IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new iconv.IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n}\n\n// Enable Streaming API automatically if 'stream' module is available and non-empty (the majority of environments).\nvar stream_module;\ntry {\n    stream_module = require(\"stream\");\n} catch (e) {}\n\nif (stream_module && stream_module.Transform) {\n    iconv.enableStreamingAPI(stream_module);\n\n} else {\n    // In rare cases where 'stream' module is not available by default, throw a helpful exception.\n    iconv.encodeStream = iconv.decodeStream = function() {\n        throw new Error(\"iconv-lite Streaming API is not enabled. Use iconv.enableStreamingAPI(require('stream')); to enable it.\");\n    };\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: js files use non-utf8 encoding. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// NOTE: Due to 'stream' module being pretty large (~100Kb, significant in browser environments), \n// we opt to dependency-inject it instead of creating a hard dependency.\nmodule.exports = function(stream_module) {\n    var Transform = stream_module.Transform;\n\n    // == Encoder stream =======================================================\n\n    function IconvLiteEncoderStream(conv, options) {\n        this.conv = conv;\n        options = options || {};\n        options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n        Transform.call(this, options);\n    }\n\n    IconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n        constructor: { value: IconvLiteEncoderStream }\n    });\n\n    IconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n        if (typeof chunk != 'string')\n            return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n        try {\n            var res = this.conv.write(chunk);\n            if (res && res.length) this.push(res);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteEncoderStream.prototype._flush = function(done) {\n        try {\n            var res = this.conv.end();\n            if (res && res.length) this.push(res);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteEncoderStream.prototype.collect = function(cb) {\n        var chunks = [];\n        this.on('error', cb);\n        this.on('data', function(chunk) { chunks.push(chunk); });\n        this.on('end', function() {\n            cb(null, Buffer.concat(chunks));\n        });\n        return this;\n    }\n\n\n    // == Decoder stream =======================================================\n\n    function IconvLiteDecoderStream(conv, options) {\n        this.conv = conv;\n        options = options || {};\n        options.encoding = this.encoding = 'utf8'; // We output strings.\n        Transform.call(this, options);\n    }\n\n    IconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n        constructor: { value: IconvLiteDecoderStream }\n    });\n\n    IconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n        if (!Buffer.isBuffer(chunk) && !(chunk instanceof Uint8Array))\n            return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n        try {\n            var res = this.conv.write(chunk);\n            if (res && res.length) this.push(res, this.encoding);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteDecoderStream.prototype._flush = function(done) {\n        try {\n            var res = this.conv.end();\n            if (res && res.length) this.push(res, this.encoding);                \n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteDecoderStream.prototype.collect = function(cb) {\n        var res = '';\n        this.on('error', cb);\n        this.on('data', function(chunk) { res += chunk; });\n        this.on('end', function() {\n            cb(null, res);\n        });\n        return this;\n    }\n\n    return {\n        IconvLiteEncoderStream: IconvLiteEncoderStream,\n        IconvLiteDecoderStream: IconvLiteDecoderStream,\n    };\n};\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","module.exports = require(\"vscode\");","module.exports = require(\"buffer\");","module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","module.exports = require(\"string_decoder\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// モジュール「vscode」には、VS Code 拡張 API が含まれています\n// モジュールをインポートし、以下のコード内でエイリアス vscode を使用して参照します。\nimport * as vscode from 'vscode';\nimport * as cp from 'child_process';\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport * as os from 'os';\n\n\n// このメソッドは、拡張機能がアクティブ化されたときに呼び出されます\n// 拡張機能は、コマンドが初めて実行されたときにアクティブ化されます。\nexport function activate(context: vscode.ExtensionContext) {\n\n\t// 「TrainingJavaTool.RunCode」で実行される処理\n\tlet disposable = vscode.commands.registerCommand('JavaSelectedCodeExecutor.RunCode', function () {\n\t\t\n\t\t// テキストエディタが開かれているかどうかの判定\n\t\tif(typeof vscode.window.activeTextEditor == 'undefined' ){\n\t\t\tvscode.window.showErrorMessage('ファイルが開かれていません。');\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// 開かれているテキストがJava言語のファイルになっているかどうかの反対\n\t\tif (vscode.window.activeTextEditor.document.languageId !== 'java') {\n\t\t\tvscode.window.showErrorMessage('これは Java ファイルではありません。');\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t// 選択範囲を取得する\n\t\tlet cur_selection = vscode.window.activeTextEditor.selection; \n\t\t\n\t\t//選択範囲のテキストを取得する（ない場合は全て）\n\t\tlet text = ''; \n\t\ttext = text + 'void print(Object param) { ' + os.EOL;\n\t\ttext = text + '    System.out.print(param); ' + os.EOL;\n\t\ttext = text + '} ' + os.EOL;\n\t\ttext = text + '' + os.EOL;\n\t\ttext = text + 'void println(Object param) { ' + os.EOL;\n\t\ttext = text + '    System.out.println(param); ' + os.EOL;\n\t\ttext = text + '} ' + os.EOL;\n\t\ttext = text + '' + os.EOL;\n\t\ttext = text + 'String input() { ' + os.EOL;\n\t\ttext = text + '    Scanner in = new Scanner(System.in, \"MS932\"); ' + os.EOL;\n\t\ttext = text + '    return in.nextLine(); ' + os.EOL;\n\t\ttext = text + '} ' + os.EOL;\n\t\ttext = text + 'char inputToChar() { ' + os.EOL;\n\t\ttext = text + '    return input().charAt(0); ' + os.EOL;\n\t\ttext = text + '} ' + os.EOL;\n\t\ttext = text + '' + os.EOL;\n\t\ttext = text + 'int inputToInt() { ' + os.EOL;\n\t\ttext = text + '    return Integer.parseInt(input()); ' + os.EOL;\n\t\ttext = text + '} ' + os.EOL;\n\t\ttext = text + '' + os.EOL;\n\t\ttext = text + 'double inputToDouble() { ' + os.EOL;\n\t\ttext = text + '    return Double.parseDouble(input()); ' + os.EOL;\n\t\ttext = text + '} ' + os.EOL;\n\t\ttext = text + '' + os.EOL;\n\t\ttext = text + 'long inputToLong() { ' + os.EOL;\n\t\ttext = text + '    return Long.parseLong(input()); ' + os.EOL;\n\t\ttext = text + '} ' + os.EOL;\n\t\ttext = text + '' + os.EOL;\n\t\ttext = text + 'float inputToFloat() { ' + os.EOL;\n\t\ttext = text + '    return Float.parseFloat(input()); ' + os.EOL;\n\t\ttext = text + '} ' + os.EOL;\n\t\ttext = text + '' + os.EOL;\n\t\ttext = text + 'short inputToShort() { ' + os.EOL;\n\t\ttext = text + '    return Short.parseShort(input()); ' + os.EOL;\n\t\ttext = text + '} ' + os.EOL;\n\t\t\n\t\tif(cur_selection.isEmpty){\n\t\t\ttext = text + vscode.window.activeTextEditor.document.getText() + os.EOL;\n\t\t}else{\n\t\t\ttext = text + vscode.window.activeTextEditor.document.getText(cur_selection) + os.EOL;\n\t\t}\n\t\ttext = text + '/ex' + os.EOL;\n\t\t\n\t\t\n\t\t// 一時ファイルのパスを生成\n\t\tlet temp_jshell_file = path.join(os.tmpdir(), 'vscode-extension-temp' + Math.random().toString(36).slice(-8) + '.jsh');\n\t\t\n\t\t// 一時ファイルに出力（出力後にJshellで実行）\n\t\tfs.writeFile(temp_jshell_file, text, (err) =>{\n\t\t\n\t\t\t// JavaHomeのパス\n\t\t\tlet javaHomePath = vscode.workspace.getConfiguration('JavaSelectedCodeExecutor').get('java_home', '');\n\t\t\tif(javaHomePath == '' ){\n\t\t\t\tvscode.window.showInformationMessage('内部的に保持しているJavaで動作します。');\n\t\t\t\tjavaHomePath = path.join(__dirname, 'jdk-11');\n\t\t\t}\n\t\t\t\n\t\t\t// Jshellのパス\n\t\t\tlet jshellCommand = path.join(javaHomePath, 'bin', 'jshell.exe');\n\t\t\t\n\t\t\t// ターミナル上で実行\n\t\t\tlet temp_bat_file = path.join(os.tmpdir(), 'vscode-extension-temp' + Math.random().toString(36).slice(-8) + '.bat');\n\t\t\tlet bat_text = ''; \n\t\t\tbat_text = bat_text + '@echo off' + os.EOL;\n\t\t\tbat_text = bat_text + '\"' + jshellCommand + '\"' + ' ' + '-J-Dfile.encoding=utf8 --execution local' +' ' + '\"' + temp_jshell_file + '\"' + os.EOL;\n\t\t\tbat_text = bat_text + 'echo.' + os.EOL;\n\t\t\tbat_text = bat_text + 'echo.' + os.EOL;\n\t\t\tbat_text = bat_text + 'echo 実行が完了しました。' + os.EOL;\n\t\t\tbat_text = bat_text + 'echo 終了するには何かキーを押してください . . . ' + os.EOL;\n\t\t\tbat_text = bat_text + 'pause > NUL' + os.EOL;\n\t\t\tbat_text = bat_text + 'exit' + os.EOL;\n\t\t\t\n\t\t\tfs.writeFileSync(temp_bat_file , '');\n\t\t\tlet fd = fs.openSync(temp_bat_file, 'w');\n\t\t\tlet iconv = require('iconv-lite');\n\t\t\tlet buf = iconv.encode(bat_text, 'Shift_JIS');\n\t\t\tfs.write(fd, buf, 0, buf.length , function(err, written, buffer){\n\t\t\t\tif(err) throw err;\n\t\t\t\tlet executCommand = '\"' + temp_bat_file + '\"';\n\t\t\t\tlet terminal = vscode.window.createTerminal('jshell実行', 'cmd.exe', '/c ' + '\"' + executCommand + '\"');\n\t\t\t\tterminal.show();\n\t\t\t});\n\t\t});\n\t});\n\t\n\tcontext.subscriptions.push(disposable);\n}\n\n// このメソッドは、拡張機能が非アクティブ化されたときに呼び出されます。\nexport function deactivate() {}\n\n"],"names":["Buffer","exports","_dbcs","DBCSCodec","UNASSIGNED","GB18030_CODE","SEQ_START","NODE_START","UNASSIGNED_NODE","Array","i","codecOptions","iconv","this","encodingName","Error","table","mappingTable","decodeTables","slice","decodeTableSeq","length","_addDecodeChunk","gb18030","commonThirdByteNodeIdx","push","commonFourthByteNodeIdx","firstByteNode","secondByteNode","j","thirdByteNode","k","fourthByteNode","l","defaultCharUnicode","encodeTable","encodeTableSeq","skipEncodeChars","encodeSkipVals","val","from","to","_fillEncodeTable","encodeAdd","uChar","Object","prototype","hasOwnProperty","call","_setEncodeChar","charCodeAt","defCharSB","defaultCharSingleByte","DBCSEncoder","options","codec","leadSurrogate","seqObj","undefined","DBCSDecoder","nodeIdx","prevBytes","findIdx","r","mid","encoder","decoder","_getDecodeTrieNode","addr","bytes","node","toString","chunk","curAddr","parseInt","writeTable","part","code","codeTrail","len","seq","m","charCode","_getEncodeBucket","uCode","high","dbcsCode","bucket","low","_setEncodeSequence","oldVal","prefix","hasValues","subNodeEmpty","mbCode","subNodeIdx","newPrefix","write","str","newBuf","alloc","nextChar","resCode","subtable","idx","uChars","gbChars","Math","floor","end","buf","prevOffset","seqStart","curByte","ptr","uCodeLead","concat","ret","bytesArr","module","type","modules","enc","InternalCodec","bomAware","InternalEncoderBase64","InternalEncoderCesu8","InternalDecoderCesu8","utf8","cesu8","unicode11utf8","ucs2","utf16le","binary","base64","hex","_internal","InternalEncoder","InternalDecoder","StringDecoder","prevStr","acc","contBytes","accBytes","isBuffer","completeQuads","bufIdx","res","String","fromCharCode","SBCSCodec","chars","asciiString","decodeBuf","encodeBuf","SBCSEncoder","SBCSDecoder","_sbcs","idx1","idx2","Utf16BECodec","Utf16BEEncoder","Utf16BEDecoder","overflowByte","Utf16Codec","Utf16Encoder","addBOM","getEncoder","Utf16Decoder","initialBufs","initialBufsLen","detectEncoding","bufs","defaultEncoding","b","charsProcessed","asciiCharsLE","asciiCharsBE","outer_loop","utf16be","tmp","buf2","utf16","encoding","getDecoder","resStr","trail","Utf32Codec","isLE","Utf32Encoder","highSurrogate","Utf32Decoder","badChar","overflow","_writeCodepoint","dst","offset","codepoint","Utf32AutoCodec","Utf32AutoEncoder","Utf32AutoDecoder","invalidLE","invalidBE","bmpCharsLE","bmpCharsBE","_utf32","utf32le","utf32be","ucs4le","ucs4be","src","write32","writeUInt32LE","writeUInt32BE","readUInt16LE","isHighSurrogate","isLowSurrogate","utf32","ucs4","Utf7Codec","utf7","unicode11utf7","Utf7Encoder","Utf7Decoder","nonDirectChars","inBase64","base64Accum","replace","encode","bind","base64Regex","base64Chars","test","plusChar","minusChar","andChar","Utf7IMAPCodec","Utf7IMAPEncoder","base64AccumIdx","Utf7IMAPDecoder","lastI","b64str","decode","canBeDecoded","utf7imap","base64IMAPChars","PrependBOMWrapper","StripBOMWrapper","pass","PrependBOM","StripBOM","stripBOM","stream_module","bomHandling","encodings","skipDecodeWarning","console","error","encodingExists","getCodec","e","toEncoding","fromEncoding","_codecDataCache","_canonicalizeEncoding","codecDef","key","toLowerCase","enableStreamingAPI","supportsStreams","streams","IconvLiteEncoderStream","IconvLiteDecoderStream","encodeStream","decodeStream","Transform","conv","decodeStrings","create","constructor","value","_transform","done","_flush","collect","cb","chunks","on","Uint8Array","buffer","safer","Safer","encodingOrOffset","TypeError","size","fill","RangeError","kStringMaxLength","process","binding","constants","MAX_LENGTH","kMaxLength","MAX_STRING_LENGTH","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","context","disposable","vscode","commands","registerCommand","window","activeTextEditor","showErrorMessage","document","languageId","cur_selection","selection","text","os","EOL","isEmpty","getText","temp_jshell_file","path","join","tmpdir","random","fs","writeFile","err","javaHomePath","workspace","getConfiguration","get","showInformationMessage","__dirname","jshellCommand","temp_bat_file","bat_text","writeFileSync","fd","openSync","written","executCommand","createTerminal","show","subscriptions"],"sourceRoot":""}